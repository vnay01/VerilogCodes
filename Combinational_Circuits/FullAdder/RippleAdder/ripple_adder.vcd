$date
	Mon Aug 31 12:37:57 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbenchripple $end
$var wire 4 ! S [0:3] $end
$var wire 1 " Cout $end
$var reg 4 # A [0:3] $end
$var reg 4 $ B [0:3] $end
$var reg 1 % Cin $end
$scope module RA1 $end
$var wire 4 & A [0:3] $end
$var wire 4 ' B [0:3] $end
$var wire 1 % Cin $end
$var wire 4 ( S [0:3] $end
$var wire 1 " Cout $end
$var wire 1 ) C3 $end
$var wire 1 * C2 $end
$var wire 1 + C1 $end
$scope module FA1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 + C $end
$var wire 1 % Cin $end
$var wire 1 . S1 $end
$var wire 1 / S $end
$var wire 1 0 D1 $end
$var wire 1 1 C1 $end
$scope module HA1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 1 C $end
$var wire 1 . S $end
$upscope $end
$scope module HA2 $end
$var wire 1 . A $end
$var wire 1 % B $end
$var wire 1 0 C $end
$var wire 1 / S $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 * C $end
$var wire 1 + Cin $end
$var wire 1 4 S1 $end
$var wire 1 5 S $end
$var wire 1 6 D1 $end
$var wire 1 7 C1 $end
$scope module HA1 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 7 C $end
$var wire 1 4 S $end
$upscope $end
$scope module HA2 $end
$var wire 1 4 A $end
$var wire 1 + B $end
$var wire 1 6 C $end
$var wire 1 5 S $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 ) C $end
$var wire 1 * Cin $end
$var wire 1 : S1 $end
$var wire 1 ; S $end
$var wire 1 < D1 $end
$var wire 1 = C1 $end
$scope module HA1 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 = C $end
$var wire 1 : S $end
$upscope $end
$scope module HA2 $end
$var wire 1 : A $end
$var wire 1 * B $end
$var wire 1 < C $end
$var wire 1 ; S $end
$upscope $end
$upscope $end
$scope module FA4 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 " C $end
$var wire 1 ) Cin $end
$var wire 1 @ S1 $end
$var wire 1 A S $end
$var wire 1 B D1 $end
$var wire 1 C C1 $end
$scope module HA1 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 C C $end
$var wire 1 @ S $end
$upscope $end
$scope module HA2 $end
$var wire 1 @ A $end
$var wire 1 ) B $end
$var wire 1 B C $end
$var wire 1 A S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#5
0;
0A
0*
0)
0"
0/
b0 !
b0 (
05
06
0<
0B
0+
0.
01
04
07
0:
0=
0@
0C
00
0-
03
09
0?
0,
02
08
0>
0%
b0 $
b0 '
b0 #
b0 &
#10
b1000 !
b1000 (
1/
1%
#15
1A
1@
b1 !
b1 (
0/
1?
0%
b1 $
b1 '
#20
b1001 !
b1001 (
1/
1%
#25
b1 !
b1 (
0/
0?
1>
0%
b0 $
b0 '
b1 #
b1 &
#30
b1001 !
b1001 (
1/
1%
#35
b1 !
b1 (
0/
1?
0>
0%
b1 $
b1 '
b0 #
b0 &
#40
0A
1"
0@
1C
b1000 !
b1000 (
1/
1>
1%
b1 #
b1 &
#45
